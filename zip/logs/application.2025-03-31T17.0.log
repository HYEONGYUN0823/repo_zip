2025-03-31T17:04:10.551 [restartedMain] INFO c.a.ZipApplication - Starting ZipApplication using Java 21.0.5 with PID 7936 (C:\factory\ws_sts4_4270\repo_zip\zip\bin\main started by user in C:\factory\ws_sts4_4270\repo_zip\zip) 
2025-03-31T17:04:10.552 [restartedMain] INFO c.a.ZipApplication - No active profile set, falling back to 1 default profile: "default" 
2025-03-31T17:04:10.577 [restartedMain] INFO o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
2025-03-31T17:04:10.578 [restartedMain] INFO o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
2025-03-31T17:04:11.252 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2025-03-31T17:04:11.260 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:04:11.261 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2025-03-31T17:04:11.261 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36] 
2025-03-31T17:04:11.284 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2025-03-31T17:04:11.284 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 697 ms 
2025-03-31T17:04:11.483 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-1 - Starting... 
2025-03-31T17:04:11.695 [restartedMain] INFO c.z.h.p.HikariPool - HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7351ba0 
2025-03-31T17:04:11.696 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-1 - Start completed. 
2025-03-31T17:04:11.712 [restartedMain] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 
			ifcdSeq
			, ifcdName
			, ifcgSeq
		FROM
			code
		WHERE 1=1
			AND ifcdDelNy = 0
		    AND ifcdUseNy = 1
 {executed in 5 msec} 
2025-03-31T17:04:12.418 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2025-03-31T17:04:12.428 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:04:12.442 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2025-03-31T17:04:12.447 [restartedMain] INFO c.a.ZipApplication - Started ZipApplication in 2.106 seconds (process running for 2.589) 
2025-03-31T17:04:12.534 [http-nio-8080-exec-1] INFO o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2025-03-31T17:04:12.534 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2025-03-31T17:04:12.535 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Completed initialization in 1 ms 
2025-03-31T17:04:12.571 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 1 msec} 
2025-03-31T17:04:12.574 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.price,
			    a.score,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:05:24.651 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 3 msec} 
2025-03-31T17:05:24.654 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.price,
			    a.score,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:05:39.667 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 2 msec} 
2025-03-31T17:05:39.670 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.price,
			    a.score,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:06:06.027 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 2 msec} 
2025-03-31T17:06:06.030 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.price,
			    a.score,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:09:51.543 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 4 msec} 
2025-03-31T17:09:51.856 [http-nio-8080-exec-9] ERROR j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.price,
			    a.score,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {FAILED after 312 msec} 
java.sql.SQLSyntaxErrorException: Unknown column 'a.price' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	at jdk.proxy2/jdk.proxy2.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy72.selectList(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy3/jdk.proxy3.$Proxy73.selectList(Unknown Source)
	at com.a7a7.modeule.member.MemberService.selectList(MemberService.java:23)
	at com.a7a7.modeule.member.MemberController.memberXdmList(MemberController.java:79)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-03-31T17:09:51.923 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'a.price' in 'field list'
### The error may exist in file [C:\factory\ws_sts4_4270\repo_zip\zip\bin\main\mybatis\mapper\mysql\main\infra\MemberMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT aa.* FROM (    SELECT     a.seq,             a.name,        a.gender,        a.btd,        a.email,        a.passWord,        a.price,        a.score,        a.delNy,        a.admSignin,        a.mobileCarrier       FROM userUi as a   WHERE 1=1                    ORDER BY a.seq DESC      ) aa   limit ? offset ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'a.price' in 'field list'
; bad SQL grammar []] with root cause 
java.sql.SQLSyntaxErrorException: Unknown column 'a.price' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	at jdk.proxy2/jdk.proxy2.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy72.selectList(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy3/jdk.proxy3.$Proxy73.selectList(Unknown Source)
	at com.a7a7.modeule.member.MemberService.selectList(MemberService.java:23)
	at com.a7a7.modeule.member.MemberController.memberXdmList(MemberController.java:79)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-03-31T17:11:24.421 [File Watcher] INFO o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) 
2025-03-31T17:11:24.426 [Thread-5] INFO o.s.b.w.e.t.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete 
2025-03-31T17:11:24.427 [tomcat-shutdown] INFO o.a.c.h.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:11:24.431 [tomcat-shutdown] INFO o.s.b.w.e.t.GracefulShutdown - Graceful shutdown complete 
2025-03-31T17:11:24.431 [Thread-5] INFO o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:11:24.435 [Thread-5] INFO c.z.h.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2025-03-31T17:11:24.440 [Thread-5] INFO c.z.h.HikariDataSource - HikariPool-1 - Shutdown completed. 
2025-03-31T17:11:24.505 [restartedMain] INFO c.a.ZipApplication - Starting ZipApplication using Java 21.0.5 with PID 7936 (C:\factory\ws_sts4_4270\repo_zip\zip\bin\main started by user in C:\factory\ws_sts4_4270\repo_zip\zip) 
2025-03-31T17:11:24.505 [restartedMain] INFO c.a.ZipApplication - No active profile set, falling back to 1 default profile: "default" 
2025-03-31T17:11:24.658 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2025-03-31T17:11:24.659 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:11:24.659 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2025-03-31T17:11:24.659 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36] 
2025-03-31T17:11:24.667 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2025-03-31T17:11:24.667 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 161 ms 
2025-03-31T17:11:24.715 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-2 - Starting... 
2025-03-31T17:11:24.724 [restartedMain] INFO c.z.h.p.HikariPool - HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@201316ef 
2025-03-31T17:11:24.724 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-2 - Start completed. 
2025-03-31T17:11:24.725 [restartedMain] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT 
			ifcdSeq
			, ifcdName
			, ifcgSeq
		FROM
			code
		WHERE 1=1
			AND ifcdDelNy = 0
		    AND ifcdUseNy = 1
 {executed in 1 msec} 
2025-03-31T17:11:24.795 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2025-03-31T17:11:24.800 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:11:24.802 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2025-03-31T17:11:24.804 [restartedMain] INFO c.a.ZipApplication - Started ZipApplication in 0.324 seconds (process running for 434.945) 
2025-03-31T17:11:24.805 [restartedMain] INFO o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged 
2025-03-31T17:11:57.277 [File Watcher] INFO o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) 
2025-03-31T17:11:57.278 [Thread-7] INFO o.s.b.w.e.t.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete 
2025-03-31T17:11:57.278 [tomcat-shutdown] INFO o.a.c.h.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:11:57.280 [tomcat-shutdown] INFO o.s.b.w.e.t.GracefulShutdown - Graceful shutdown complete 
2025-03-31T17:11:57.280 [Thread-7] INFO o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:11:57.283 [Thread-7] INFO c.z.h.HikariDataSource - HikariPool-2 - Shutdown initiated... 
2025-03-31T17:11:57.287 [Thread-7] INFO c.z.h.HikariDataSource - HikariPool-2 - Shutdown completed. 
2025-03-31T17:11:57.344 [restartedMain] INFO c.a.ZipApplication - Starting ZipApplication using Java 21.0.5 with PID 7936 (C:\factory\ws_sts4_4270\repo_zip\zip\bin\main started by user in C:\factory\ws_sts4_4270\repo_zip\zip) 
2025-03-31T17:11:57.344 [restartedMain] INFO c.a.ZipApplication - No active profile set, falling back to 1 default profile: "default" 
2025-03-31T17:11:57.457 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2025-03-31T17:11:57.458 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:11:57.458 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2025-03-31T17:11:57.458 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36] 
2025-03-31T17:11:57.465 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2025-03-31T17:11:57.465 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 120 ms 
2025-03-31T17:11:57.511 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-3 - Starting... 
2025-03-31T17:11:57.519 [restartedMain] INFO c.z.h.p.HikariPool - HikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4e55561 
2025-03-31T17:11:57.519 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-3 - Start completed. 
2025-03-31T17:11:57.520 [restartedMain] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT 
			ifcdSeq
			, ifcdName
			, ifcgSeq
		FROM
			code
		WHERE 1=1
			AND ifcdDelNy = 0
		    AND ifcdUseNy = 1
 {executed in 1 msec} 
2025-03-31T17:11:57.574 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2025-03-31T17:11:57.578 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:11:57.580 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2025-03-31T17:11:57.581 [restartedMain] INFO c.a.ZipApplication - Started ZipApplication in 0.255 seconds (process running for 467.722) 
2025-03-31T17:11:57.582 [restartedMain] INFO o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged 
2025-03-31T17:11:58.709 [http-nio-8080-exec-1] INFO o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2025-03-31T17:11:58.709 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2025-03-31T17:11:58.710 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Completed initialization in 1 ms 
2025-03-31T17:11:58.724 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 1 msec} 
2025-03-31T17:11:58.725 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 0 msec} 
2025-03-31T17:12:01.233 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 1 msec} 
2025-03-31T17:12:01.235 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:12:20.853 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 0 msec} 
2025-03-31T17:12:20.855 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:15:35.441 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 2 msec} 
2025-03-31T17:15:35.444 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:15:37.863 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 1 msec} 
2025-03-31T17:15:37.864 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:34:33.587 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 2 msec} 
2025-03-31T17:34:33.589 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:35:47.336 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 1 msec} 
2025-03-31T17:35:47.338 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:35:49.288 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			seq,
			name,
			gender,
			btd,
			email,
			passWord,
			delNy,
			admSignin,
			mobileCarrier
		FROM
			userUi
		WHERE 1=1
			AND seq = '0'
		ORDER BY seq DESC
 {executed in 2 msec} 
2025-03-31T17:36:28.621 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 2 msec} 
2025-03-31T17:36:28.623 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:37:13.653 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 3 msec} 
2025-03-31T17:37:13.655 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:37:15.389 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 1 msec} 
2025-03-31T17:37:15.391 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:38:17.629 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:38:17.630 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcdSeq,
			    a.ifcdName,
			    a.ifcdDelNy,
			    a.ifcdUseNy,
			    a.ifcdRegDateTime,
			    a.ifcdModDateTime,
			    b.ifcgSeq,
			    b.ifcgName

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC

		) aa
		limit 5 offset 0
 {executed in 0 msec} 
2025-03-31T17:38:25.452 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 1 msec} 
2025-03-31T17:38:25.455 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 0 msec} 
2025-03-31T17:39:55.104 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 1 msec} 
2025-03-31T17:39:55.106 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:39:56.037 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:39:56.039 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcdSeq,
			    a.ifcdName,
			    a.ifcdDelNy,
			    a.ifcdUseNy,
			    a.ifcdRegDateTime,
			    a.ifcdModDateTime,
			    b.ifcgSeq,
			    b.ifcgName

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:39:57.038 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 1 msec} 
2025-03-31T17:39:57.041 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:39:59.899 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT COUNT(*)

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:39:59.901 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcdSeq,
			    a.ifcdName,
			    a.ifcdDelNy,
			    a.ifcdUseNy,
			    a.ifcdRegDateTime,
			    a.ifcdModDateTime,
			    b.ifcgSeq,
			    b.ifcgName

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:40:01.193 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
			ifcdSeq,
			ifcdName,
			ifcdDelNy,
			ifcdUseNy,
			ifcgSeq
		FROM
			code
		WHERE 1=1
			AND ifcdSeq = '0'
		ORDER BY ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:40:01.195 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime
			FROM codeGroup as a
			WHERE 1=1
            AND ifcgDelNy = 0
			AND ifcgUseNy = 1
		) aa
 {executed in 1 msec} 
2025-03-31T17:41:30.678 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT COUNT(*)

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:41:30.680 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT aa.* FROM (
			SELECT
				a.ifcdSeq,
			    a.ifcdName,
			    a.ifcdDelNy,
			    a.ifcdUseNy,
			    a.ifcdRegDateTime,
			    a.ifcdModDateTime,
			    b.ifcgSeq,
			    b.ifcgName

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:41:31.998 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 1 msec} 
2025-03-31T17:41:32.001 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:44:54.743 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:44:54.746 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcdSeq,
			    a.ifcdName,
			    a.ifcdDelNy,
			    a.ifcdUseNy,
			    a.ifcdRegDateTime,
			    a.ifcdModDateTime,
			    b.ifcgSeq,
			    b.ifcgName

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:44:56.033 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:44:56.036 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcdSeq,
			    a.ifcdName,
			    a.ifcdDelNy,
			    a.ifcdUseNy,
			    a.ifcdRegDateTime,
			    a.ifcdModDateTime,
			    b.ifcgSeq,
			    b.ifcgName

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:44:57.186 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
			ifcdSeq,
			ifcdName,
			ifcdDelNy,
			ifcdUseNy,
			ifcgSeq
		FROM
			code
		WHERE 1=1
			AND ifcdSeq = '0'
		ORDER BY ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:44:57.189 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime
			FROM codeGroup as a
			WHERE 1=1
            AND ifcgDelNy = 0
			AND ifcgUseNy = 1
		) aa
 {executed in 1 msec} 
2025-03-31T17:45:11.095 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
			ifcdSeq,
			ifcdName,
			ifcdDelNy,
			ifcdUseNy,
			ifcgSeq
		FROM
			code
		WHERE 1=1
			AND ifcdSeq = '0'
		ORDER BY ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:45:11.098 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime
			FROM codeGroup as a
			WHERE 1=1
            AND ifcgDelNy = 0
			AND ifcgUseNy = 1
		) aa
 {executed in 2 msec} 
2025-03-31T17:45:55.158 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
			ifcdSeq,
			ifcdName,
			ifcdDelNy,
			ifcdUseNy,
			ifcgSeq
		FROM
			code
		WHERE 1=1
			AND ifcdSeq = '0'
		ORDER BY ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:45:55.161 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime
			FROM codeGroup as a
			WHERE 1=1
            AND ifcgDelNy = 0
			AND ifcgUseNy = 1
		) aa
 {executed in 1 msec} 
2025-03-31T17:45:58.312 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 1 msec} 
2025-03-31T17:45:58.315 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 2 msec} 
2025-03-31T17:46:27.133 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC
 {executed in 1 msec} 
2025-03-31T17:46:27.135 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.seq,

			    a.name,
			    a.gender,
			    a.btd,
			    a.email,
			    a.passWord,
			    a.delNy,
			    a.admSignin,
			    a.mobileCarrier

		FROM userUi as a
		WHERE 1=1

		ORDER BY a.seq DESC

		) aa
		limit 5 offset 0
 {executed in 0 msec} 
2025-03-31T17:46:30.726 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC
 {executed in 1 msec} 
2025-03-31T17:46:30.728 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcdSeq,
			    a.ifcdName,
			    a.ifcdDelNy,
			    a.ifcdUseNy,
			    a.ifcdRegDateTime,
			    a.ifcdModDateTime,
			    b.ifcgSeq,
			    b.ifcgName

		FROM code as a
		LEFT JOIN
			codeGroup b
		ON
			a.ifcgSeq = b.ifcgSeq
		WHERE 1=1
		 AND a.ifcdUseNy = 1 
         AND a.ifcdDelNy = 0 

		ORDER BY a.ifcdSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:46:33.490 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 0 msec} 
2025-03-31T17:46:33.492 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:46:39.444 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT COUNT(*)

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC
 {executed in 1 msec} 
2025-03-31T17:46:39.448 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT aa.* FROM (
			SELECT
				a.ifcgSeq,
			    a.ifcgName,
			    (select count(aa.ifcdSeq) from code aa 
			    	where 1=1 
			    		and aa.ifcdDelNy = 0
			    		and aa.ifcgSeq = a.ifcgSeq
			    ) as xifcdSeqCount,
			    a.ifcgDelNy,
			    a.ifcgUseNy,
			    a.ifcgRegDateTime,
			    a.ifcgModDateTime

		FROM codeGroup as a
		WHERE 1=1
		 AND a.ifcgUseNy = 1 
         AND a.ifcgDelNy = 0 

		ORDER BY a.ifcgSeq DESC

		) aa
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-31T17:46:44.097 [RMI TCP Connection(58)-127.0.0.1] INFO o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested. 
2025-03-31T17:46:44.098 [RMI TCP Connection(58)-127.0.0.1] INFO o.s.b.w.e.t.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete 
2025-03-31T17:46:44.099 [tomcat-shutdown] INFO o.a.c.h.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:46:44.102 [tomcat-shutdown] INFO o.s.b.w.e.t.GracefulShutdown - Graceful shutdown complete 
2025-03-31T17:46:44.103 [RMI TCP Connection(58)-127.0.0.1] INFO o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"] 
2025-03-31T17:46:44.106 [RMI TCP Connection(58)-127.0.0.1] INFO c.z.h.HikariDataSource - HikariPool-3 - Shutdown initiated... 
2025-03-31T17:46:44.109 [RMI TCP Connection(58)-127.0.0.1] INFO c.z.h.HikariDataSource - HikariPool-3 - Shutdown completed. 
