<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.a7a7.modeule.review.ReviewDao">

    <resultMap id="reviewResultMap" type="com.a7a7.modeule.review.ReviewDto">
        <id property="seq" column="review_uuid"/> <!-- review_uuid를 DTO의 seq에 매핑 -->
        <result property="reviewTitle" column="reviewTitle"/>
        <result property="reviewContent" column="reviewContent"/>
        <result property="rating" column="rating"/>
        <result property="mealKit_seq" column="mealKit_seq"/>
        <result property="userUi_seq" column="userUi_seq"/>
        <result property="userName" column="userName"/>
        <result property="regDate" column="regDate"/>
        <result property="modDate" column="modDate"/>
        <!-- <result property="delNy" column="delNy"/> DTO에 delNy가 있다면 매핑 -->
    </resultMap>

    <sql id="reviewColumns">
        r.review_uuid, r.reviewTitle, r.reviewContent, r.rating,
        r.mealKit_seq, r.userUi_seq, u.name AS userName, r.regDate, r.modDate
        <!-- , r.delNy -->
    </sql>

    <sql id="reviewJoins">
        FROM review r
        JOIN userUi u ON r.userUi_seq = u.seq
    </sql>

    <sql id="commonWhereClause">
        WHERE r.mealKit_seq = CAST(#{mealKitSeq} AS UNSIGNED)
          AND r.delNy = 0 <!-- 삭제되지 않은 리뷰만 조회 -->
    </sql>

    <select id="selectReviewsByMealKitOrderByRegDateDesc" resultMap="reviewResultMap">
        SELECT <include refid="reviewColumns" />
        <include refid="reviewJoins" />
        <include refid="commonWhereClause" />
        ORDER BY r.regDate DESC
    </select>

    <select id="selectReviewsByMealKitOrderByRatingDesc" resultMap="reviewResultMap">
        SELECT <include refid="reviewColumns" />
        <include refid="reviewJoins" />
        <include refid="commonWhereClause" />
        ORDER BY r.rating DESC, r.regDate DESC
    </select>

    <select id="selectReviewsByMealKitOrderByRatingAsc" resultMap="reviewResultMap">
        SELECT <include refid="reviewColumns" />
        <include refid="reviewJoins" />
        <include refid="commonWhereClause" />
        ORDER BY r.rating ASC, r.regDate DESC
    </select>

<select id="selectReviewBySeq" resultMap="reviewResultMap">
    SELECT
        r.review_uuid, r.reviewTitle, r.reviewContent, r.rating,
        r.mealKit_seq, r.userUi_seq, u.name AS userName, r.regDate, r.modDate, r.delNy
    FROM review r
    LEFT JOIN userUi u ON r.userUi_seq = u.seq <!-- 명시적으로 JOIN 사용 -->
    WHERE r.review_uuid = #{reviewUuid}
<!--     AND r.delNy = 0 필요에 따라 주석 해제 -->
</select>

    <insert id="insertReview" parameterType="com.a7a7.modeule.review.ReviewDto">
        INSERT INTO review (
            review_uuid, reviewTitle, reviewContent, rating,
            mealKit_seq, userUi_seq, regDate, delNy
        ) VALUES (
            #{seq}, #{reviewTitle}, #{reviewContent},
            #{rating, jdbcType=INTEGER},
            #{mealKit_seq, jdbcType=INTEGER},
            #{userUi_seq, jdbcType=INTEGER},
            NOW(), 0 <!-- delNy 기본값 0으로 삽입 -->
        )
    </insert>

    <update id="deleteReview">
        UPDATE review
        SET
            delNy = 1,
            modDate = NOW()
        WHERE review_uuid = #{reviewUuid} AND delNy = 0
    </update>

    <select id="selectReviewCountByMealKit" resultType="int">
        SELECT COUNT(*)
        FROM review r <!-- 별칭 r 추가 -->
        <include refid="commonWhereClause" />
    </select>

    <select id="getRatingCountsByMealKit" resultType="map">
        SELECT rating, COUNT(*) as count
        FROM review r <!-- 별칭 r 추가 -->
        <include refid="commonWhereClause" />
        GROUP BY rating
    </select>

    <update id="updateMealKitScore">
        UPDATE mealKit
        SET score = #{score, jdbcType=DOUBLE}
        WHERE seq = CAST(#{mealKitSeq} AS UNSIGNED)
    </update>

</mapper>